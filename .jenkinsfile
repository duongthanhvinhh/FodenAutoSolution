pipeline {
    agent any
    parameters {
        string(name: 'StoryId', defaultValue: '', description: 'Input User Story Id')
        string(name: 'XmlSuite', defaultValue: '', description: 'Test Suite (e.g., testng)')
    }
    tools {
        maven 'MAVEN_HOME' // Ensure this matches the Maven installation name in Jenkins
        allure 'ALLURE_REPORT'
    }
    environment {
        ALLURE_RESULTS_DIR = "allure-results-${env.BUILD_NUMBER}"
    }
    stages {
        stage('Prepare Workspace') {
            steps {
                sh 'mkdir -p ${ALLURE_RESULTS_DIR}'
            }
        }
        stage('Start Selenium Grid') {
            steps {
                script {
                    sh 'docker-compose up -d'
                }
            }
        }
        stage('Run Tests') {
            steps {
                script {
                    def storyId = params.StoryId
                    def xmlSuite = params.XmlSuite
                    sh """
                        echo "StoryId: ${storyId}"
                        echo "XmlSuite: ${xmlSuite}"
                        echo "mvn clean test -DsuiteXmlFile=${xmlSuite}.xml -Dgroups=${storyId} -Dallure.results.directory=${env.ALLURE_RESULTS_DIR}"
                        mvn clean test -DsuiteXmlFile=${xmlSuite}.xml -Dgroups=${storyId} -Dallure.results.directory=${env.ALLURE_RESULTS_DIR}
                    """
                }
            }
        }
    }
    post {
        always {
            script {
                sh 'docker-compose down'
                allure([
                    includeProperties: false,
                    jdk: '',
                    properties: [],
                    reportBuildPolicy: 'ALWAYS',
                    results: [[path: "${ALLURE_RESULTS_DIR}"]]
                ])
            }
        }
    }
}
