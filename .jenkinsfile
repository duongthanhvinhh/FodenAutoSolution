pipeline {
    agent any
    parameters {
        string(name: 'StoryId', defaultValue: '', description: 'Input User Story Id')
        string(name: 'XmlSuite', defaultValue: '', description: 'Test Suite (e.g., testng)')
    }
    tools {
        maven 'MAVEN_HOME' // Ensure this matches the Maven installation name in Jenkins
        allure 'ALLURE_REPORT'
    }
    environment {
        ALLURE_RESULTS_DIR = "allure-results-${env.BUILD_NUMBER}"
        PATH = "/usr/local/bin:$PATH"  // Ensure docker and docker-compose are in the PATH
    }
    stages {
        stage('Prepare Workspace') {
            steps {
                sh '''
                    mkdir -p ${ALLURE_RESULTS_DIR}
                '''
            }
        }
        stage('Start Selenium Grid') {
            steps {
                script {
                    // Ensure Docker is running and start containers
                    sh '''
                        # Ensure Docker Desktop is running (macOS)
                        if ! pgrep -x "Docker" > /dev/null; then
                            echo "Docker Desktop is not running. Starting Docker Desktop..."
                            open -a Docker
                            sleep 30  # Wait for Docker to initialize
                        else
                            echo "Docker Desktop is already running."
                        fi

                        # Start Docker Compose containers
                        python3 start_docker_desktop.py
                        docker-compose up -d
                        python3 check_container_status.py
                    '''
                }
            }
        }
        stage('Run Tests') {
            steps {
                script {
                    def storyId = params.StoryId
                    def xmlSuite = params.XmlSuite
                    sh """
                        # Print the parameters
                        echo "StoryId: ${storyId}"
                        echo "XmlSuite: ${xmlSuite}"

                        # Run Maven tests with Allure results
                        mvn clean test -DsuiteXmlFile=${xmlSuite}.xml -Dgroups=${storyId} -Dallure.results.directory=${env.ALLURE_RESULTS_DIR}
                    """
                }
            }
        }
    }
    post {
        always {
            script {
                // Clean up Docker containers
                sh '''
                    docker-compose down
                    python3 stop_docker_desktop.py
                '''
                // Generate Allure report
                allure([
                    includeProperties: false,
                    jdk: '',
                    properties: [],
                    reportBuildPolicy: 'ALWAYS',
                    results: [[path: "${ALLURE_RESULTS_DIR}"]]
                ])
            }
        }
    }
}
